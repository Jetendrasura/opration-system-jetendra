#include <stdio.h>

#define MAX_PROCESS 10

struct Process {
    int id;
    int burst_time;
    int remaining_time;
};

int main() {
    int num_processes, time_quantum;

    printf("Enter the number of processes: ");
    scanf("%d", &num_processes);

    if (num_processes > MAX_PROCESS) {
        printf("Exceeded maximum number of processes allowed.\n");
        return 1;
    }

    printf("Enter the time quantum: ");
    scanf("%d", &time_quantum);

    struct Process processes[MAX_PROCESS];
    int i, total_burst_time = 0;

    // Input burst time for each process
    for (i = 0; i < num_processes; i++) {
        printf("Enter the burst time for process %d: ", i + 1);
        scanf("%d", &processes[i].burst_time);
        processes[i].remaining_time = processes[i].burst_time;
        processes[i].id = i + 1;
        total_burst_time += processes[i].burst_time;
    }

    printf("\n");

    int current_time = 0;
    while (total_burst_time > 0) {
        for (i = 0; i < num_processes; i++) {
            if (processes[i].remaining_time > 0) {
                int execution_time = (processes[i].remaining_time > time_quantum) ? time_quantum : processes[i].remaining_time;
                processes[i].remaining_time -= execution_time;
                total_burst_time -= execution_time;
                current_time += execution_time;
                printf("Process %d executed for %d units. Current time: %d\n", processes[i].id, execution_time, current_time);
            }
        }
    }

    return 0;
}
